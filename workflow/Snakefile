import textwrap

from snakemake.exceptions import WorkflowError
from snakemake.utils import min_version

##### set minimum snakemake version #####
#min_version("8.8.0")


##### setup report #####
configfile: "config/config.yaml"


report: "report/workflow.rst"


##### setup singularity #####


# this container defines the underlying OS for each job when using the workflow
# with --use-conda --use-singularity
container: "docker://continuumio/miniconda3"


##### load rules #####


include: "rules/common.smk"
include: "rules/ref.smk"
include: "rules/trim.smk"
include: "rules/qc.smk"
include: "rules/align.smk"
include: "rules/rsem.smk"
include: "rules/diffexp.smk"


##### target rules #####


HELP_TEXT = textwrap.dedent(
    """
    RNA-seq workflow targets
    ========================

    This workflow does not run any analysis by default. Choose one of the
    terminal targets below to execute a portion of the pipeline:

      * snakemake produce_all           # run the full RNA-seq workflow
      * snakemake produce_rsem_star     # generate RSEM outputs using STAR
      * snakemake produce_rsem_bowtie2  # generate RSEM outputs using Bowtie2

    Configure the workflow in config/config.yaml. For example, adjust the
    "rsem_aligner" setting to switch between STAR and Bowtie2 when invoking
    the dedicated RSEM targets.
    """
)


rule produce_all:
    input:
        get_final_output(),


if RSEM_ALIGNER == "star":

    rule produce_rsem_star:
        input:
            get_rsem_outputs(),


else:

    rule produce_rsem_star:
        run:
            raise WorkflowError(
                "The RSEM aligner is configured as '{aligner}'. Set 'rsem_aligner' to "
                "'star' in config/config.yaml or via --config to build this target."
                .format(aligner=RSEM_ALIGNER)
            )


if RSEM_ALIGNER == "bowtie2":

    rule produce_rsem_bowtie2:
        input:
            get_rsem_outputs(),


else:

    rule produce_rsem_bowtie2:
        run:
            raise WorkflowError(
                "The RSEM aligner is configured as '{aligner}'. Set 'rsem_aligner' to "
                "'bowtie2' in config/config.yaml or via --config to build this target."
                .format(aligner=RSEM_ALIGNER)
            )


rule all:
    message:
        HELP_TEXT
    run:
        print(HELP_TEXT)
